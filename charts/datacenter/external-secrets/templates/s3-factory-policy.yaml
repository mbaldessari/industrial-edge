apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: secret-s3-factory-policy
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: secret-s3-factory
          annotations:
            apps.open-cluster-management.io/deployables: "secret"
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                kind: Secret
                type: Opaque
                metadata:
                  name: s3-secret
                  namespace: factory-s3-store
                apiVersion: v1
                data:
                  application.properties: '{{ `{{hub (lookup "v1" "Secret" "external-secrets" "s3-secret").data.s3Secret hub}}` }}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: secret-s3-factory-placement-binding
placementRef:
  name: secret-s3-factory-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: secret-s3-factory-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# We need to run this on any managed cluster but not on the HUB
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: secret-s3-factory-placement
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
