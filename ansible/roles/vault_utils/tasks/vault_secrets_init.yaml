---
- name: Check that KUBECONFIG is correctly set
  fail:
    msg: "KUBECONFIG is not set. Please set it so we can inject the secrets into the cluster's vault"
  failed_when: kubeconfig is not defined or kubeconfig | length == 0
  when: not debug | bool

- name: Create secrets backend kv-v2
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: vault secrets enable -path=secret kv-v2

- name: Enable kubernetes backend on hub
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: "vault auth enable -path={{ vault_hub }} kubernetes"

- name: Fetch "{{ external_secrets_ns }}/{{ external_secrets_sa }} secret name"
  ansible.builtin.shell: |
    oc get -n "{{ external_secrets_ns }}" serviceaccount "{{ external_secrets_sa }}" -o jsonpath='{.secrets}' 
  register: secrets_out

- name: Filter secrets of "{{ external_secrets_ns }}/{{ external_secrets_sa }}"
  set_fact:
    secret: "{{ secrets_out.stdout | from_json | json_query(\"[?starts_with(name, 'golang-external-secrets-token-')].name | [0]\") }}"

- name: Get token of "{{ external_secrets_ns }}/{{ external_secrets_sa }}"
  ansible.builtin.shell: |
    oc get secret -n "{{external_secrets_ns }}" "{{ secret }}" -o go-template="{{ '{{' }} .data.token | base64decode {{ '}}' }}"
  register: sa_token_out

- name: Set sa_token fact
  set_fact:
    sa_token: "{{ sa_token_out.stdout }}"

- name: Configure hub kubernetes backend
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: |
      vault write auth/"{{ vault_hub }}"/config token_reviewer_jwt="{{ sa_token }}" kubernetes_host="{{ vault_hub_kubernetes_host }}" kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt issuer=https://kubernetes.default.svc
